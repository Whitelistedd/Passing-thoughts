[{"C:\\Users\\Volxen\\Desktop\\port\\Passing thoughts\\passing-thoughts\\src\\index.js":"1","C:\\Users\\Volxen\\Desktop\\port\\Passing thoughts\\passing-thoughts\\src\\App.js":"2","C:\\Users\\Volxen\\Desktop\\port\\Passing thoughts\\passing-thoughts\\src\\Thought.js":"3","C:\\Users\\Volxen\\Desktop\\port\\Passing thoughts\\passing-thoughts\\src\\AddThoughtForm.js":"4","C:\\Users\\Volxen\\Desktop\\port\\Passing thoughts\\passing-thoughts\\src\\utilities.js":"5"},{"size":218,"mtime":1649607060597,"results":"6","hashOfConfig":"7"},{"size":753,"mtime":1649606966973,"results":"8","hashOfConfig":"7"},{"size":465,"mtime":1649604925125,"results":"9","hashOfConfig":"7"},{"size":897,"mtime":1649607016035,"results":"10","hashOfConfig":"7"},{"size":209,"mtime":1649604907859,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4gvq6x",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Volxen\\Desktop\\port\\Passing thoughts\\passing-thoughts\\src\\index.js",[],[],"C:\\Users\\Volxen\\Desktop\\port\\Passing thoughts\\passing-thoughts\\src\\App.js",["29","30"],[],"import React, { useState } from 'react';\r\nimport { AddThoughtForm } from './AddThoughtForm';\r\nimport { Thought } from './Thought';\r\nimport { generateId, getNewExpirationTime } from './utilities';\r\n\r\nfunction App() {\r\n  const [thoughts, setThoughts] = useState([]);\r\n\r\n  const addThought = (thought) => {\r\n    setThoughts((prev) => [thought, ...prev])\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <h1>Passing Thoughts</h1>\r\n      </header>\r\n      <main>\r\n        <AddThoughtForm addThought={addThought} />\r\n        <ul className=\"thoughts\">\r\n          {thoughts.map((thought) => (\r\n            <Thought key={thought.id} thought={thought} />\r\n          ))}\r\n        </ul>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App","C:\\Users\\Volxen\\Desktop\\port\\Passing thoughts\\passing-thoughts\\src\\Thought.js",[],[],"C:\\Users\\Volxen\\Desktop\\port\\Passing thoughts\\passing-thoughts\\src\\AddThoughtForm.js",["31"],[],"import React, { useState } from 'react';\r\nimport { generateId, getNewExpirationTime } from './utilities';\r\n\r\nexport function AddThoughtForm(props) {\r\n  const [text,setText] = useState(\"\");\r\n\r\n  const handleTextChange = (event) => {\r\n    setText(event.target.value);\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const thought = {\r\n      id: generateId(),\r\n      text: text,\r\n      expiresAt: getNewExpirationTime()\r\n    }\r\n    if (text != \"\") {\r\n    props.addThought(thought)\r\n    } else {\r\n      alert(\"type something\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className=\"AddThoughtForm\" onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        aria-label=\"What's on your mind?\"\r\n        placeholder=\"What's on your mind?\"\r\n        value={text}\r\n        onChange={handleTextChange}\r\n      />\r\n      <input type=\"submit\" value=\"Add\" />\r\n    </form>\r\n  );\r\n}","C:\\Users\\Volxen\\Desktop\\port\\Passing thoughts\\passing-thoughts\\src\\utilities.js",[],[],{"ruleId":"32","severity":1,"message":"33","line":4,"column":10,"nodeType":"34","messageId":"35","endLine":4,"endColumn":20},{"ruleId":"32","severity":1,"message":"36","line":4,"column":22,"nodeType":"34","messageId":"35","endLine":4,"endColumn":42},{"ruleId":"37","severity":1,"message":"38","line":18,"column":14,"nodeType":"39","messageId":"40","endLine":18,"endColumn":16},"no-unused-vars","'generateId' is defined but never used.","Identifier","unusedVar","'getNewExpirationTime' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected"]